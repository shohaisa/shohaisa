{"version":3,"file":"js/about.97faed36.js","mappings":"6YAIA,MAAMA,EAAQC,EAgBRC,EAAOC,EACPC,GAAOC,EAAAA,EAAAA,IAAS,CACpBC,GAAAA,GACE,OAAON,EAAMI,IACf,EACAG,GAAAA,CAAIC,GACFN,EAAK,cAAeM,EACtB,IAGIC,GAAUC,EAAAA,EAAAA,MACVC,EAAcC,IACbA,GACLA,EAAOC,UAAUC,IACf,IAAIA,EAIF,OADAC,QAAQC,IAAI,kBACL,EAHPd,EAAKF,EAAMiB,KAAO,OAAS,SAAUb,EAAKc,MAI5C,GACA,E,4kDCrCJ,MAAMC,EAAc,EAEpB,Q,uPCFA,MAAMC,GAAQC,EAAAA,EAAAA,MAERrB,EAAQC,EAORC,EAAOC,EAEPmB,EAAYC,IAChBrB,EAAK,OAAQqB,EAAG,EAGZC,EAAcD,IAClBH,EAAMK,SAAS,aAAcF,EAAG,EAG5BG,EAAa,CACjBC,IAAK,SACLC,OAAQ,UACRC,KAAM,W,svBCnBR,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,sFCFA,MAAMT,GAAQC,EAAAA,EAAAA,MAERrB,EAAQC,EAERG,GAAOM,EAAAA,EAAAA,IAAI,CAAC,GACZoB,GAAapB,EAAAA,EAAAA,KAAI,GACjBO,EAAQM,IACZnB,EAAKc,MAAQlB,EAAM+B,MAAMC,MAAMC,GAAOA,EAAGV,KAAOA,IAChDO,EAAWZ,OAAQ,CAAI,EAEnBgB,EAAQC,IACZf,EAAMK,SAAS,aAAc,IAAKU,IAClCL,EAAWZ,OAAQ,CAAK,E,sjBCZ1B,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,qLCFA,MAAME,GAAQC,EAAAA,EAAAA,MACRe,GAAY/B,EAAAA,EAAAA,KAAS,IACzBe,EAAMiB,QAAQC,MAAMC,QAAQN,GAAqB,QAAdA,EAAGO,WAElCC,GAAYpC,EAAAA,EAAAA,KAAS,IACzBe,EAAMiB,QAAQC,MAAMC,QAAQN,GAAqB,SAAdA,EAAGO,WAGlCE,EAAY,CAChBC,KAAM,GACNC,aAAc,GACdJ,OAAQ,MACRK,SAAU,OAENzC,GAAOM,EAAAA,EAAAA,IAAI,IAAKgC,IAEhBI,EAAUX,IACdf,EAAMK,SAAS,UAAW,IAAKU,IAC/BL,EAAWZ,OAAQ,CAAK,EAGpBY,GAAapB,EAAAA,EAAAA,KAAI,GACjBqC,EAAUA,KACd3C,EAAKc,MAAQ,IAAKwB,GAClBZ,EAAWZ,OAAQ,CAAI,E,smCCxBzB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://test-task-manager/./src/components/TaskForm.vue","webpack://test-task-manager/./src/components/TaskForm.vue?31c5","webpack://test-task-manager/./src/components/TaskCard.vue","webpack://test-task-manager/./src/components/TaskCard.vue?dd6a","webpack://test-task-manager/./src/components/ListComponent.vue","webpack://test-task-manager/./src/components/ListComponent.vue?12d3","webpack://test-task-manager/./src/views/TaskView.vue","webpack://test-task-manager/./src/views/TaskView.vue?be59"],"sourcesContent":["<script setup>\nimport { computed, ref } from \"vue\";\n\n// eslint-disable-next-line no-undef\nconst props = defineProps({\n  task: {\n    type: Object,\n    default: () => ({\n      name: \"\",\n      descriptions: \"\",\n      status: \"new\",\n      priority: \"\",\n    }),\n  },\n  edit: {\n    type: Boolean,\n    default: false,\n  },\n});\n// eslint-disable-next-line no-undef\nconst emit = defineEmits([\"update:task\", \"save\", \"create\"]);\nconst task = computed({\n  get() {\n    return props.task;\n  },\n  set(newValue) {\n    emit(\"update:task\", newValue);\n  },\n});\n\nconst formRef = ref();\nconst createTask = (formEl) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      emit(props.edit ? \"save\" : \"create\", task.value);\n    } else {\n      console.log(\"error submit!\");\n      return false;\n    }\n  });\n};\n</script>\n\n<template>\n  <el-form ref=\"formRef\" :model=\"task\" label-width=\"120px\">\n    <el-form-item\n      prop=\"name\"\n      label=\"Название\"\n      :rules=\"{\n        required: true,\n        message: 'Обязательное поле',\n        trigger: 'blur',\n      }\"\n    >\n      <el-input v-model=\"task.name\" />\n    </el-form-item>\n    <el-form-item prop=\"descriptions\" label=\"Описание\">\n      <el-input :rows=\"2\" type=\"textarea\" v-model=\"task.descriptions\" />\n    </el-form-item>\n    <el-form-item prop=\"status\" label=\"Статус\">\n      <el-select v-model=\"task.status\">\n        <el-option value=\"new\" label=\"Новый\" />\n        <el-option value=\"done\" label=\"Готов\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item prop=\"priority\" label=\"Приоритет\">\n      <el-select v-model=\"task.priority\">\n        <el-option value=\"low\" label=\"Низкий\" />\n        <el-option value=\"medium\" label=\"Средный\" />\n        <el-option value=\"hing\" label=\"Высокий\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" @click=\"createTask(formRef)\"\n        >Сохранить</el-button\n      >\n    </el-form-item>\n  </el-form>\n</template>\n\n<style scoped></style>\n","import script from \"./TaskForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n// eslint-disable-next-line no-undef\nconst props = defineProps({\n  task: {\n    type: Object,\n    required: true,\n  },\n});\n// eslint-disable-next-line no-undef\nconst emit = defineEmits([\"edit\"]);\n\nconst editTask = (id) => {\n  emit(\"edit\", id);\n};\n\nconst deleteTask = (id) => {\n  store.dispatch(\"deleteTask\", id);\n};\n\nconst priorities = {\n  low: \"Низкий\",\n  medium: \"Средний\",\n  hing: \"Высокий\",\n};\n</script>\n\n<template>\n  <el-card class=\"task\">\n    <template #header>\n      <div class=\"task-header\">\n        <strong class=\"task-name\">{{ props.task.name }}</strong>\n        <div class=\"task-priority\" :class=\"props.task.priority\">\n          <span>{{ priorities[props.task.priority] }}</span>\n        </div>\n      </div>\n    </template>\n    <span class=\"task-descriptions\">{{\n      props.task.descriptions\n        ? props.task.descriptions\n        : \"Описание отсутствует...\"\n    }}</span>\n    <template #footer>\n      <div class=\"task-footer\">\n        <div class=\"task-buttons\">\n          <el-button @click=\"editTask(props.task.id)\">Редактировать</el-button>\n          <el-button @click=\"deleteTask(props.task.id)\" type=\"danger\"\n            >Удалить</el-button\n          >\n        </div>\n      </div>\n    </template>\n  </el-card>\n</template>\n\n<style scoped>\n.task {\n  width: 500px;\n  min-width: 300px;\n  max-width: 500px;\n}\n.task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.task-priority {\n  width: 100px;\n  height: 30px;\n  border-radius: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  color: white;\n}\n.low {\n  background-color: #004d96;\n}\n.medium {\n  background-color: #ffab00;\n}\n.hing {\n  background-color: #962901;\n}\n@media screen and (max-width: 600px) {\n  .task {\n    width: 300px;\n  }\n}\n</style>\n","import script from \"./TaskCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskCard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TaskCard.vue?vue&type=style&index=0&id=b7c4ffa0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b7c4ffa0\"]])\n\nexport default __exports__","<script setup>\nimport TaskCard from \"@/components/TaskCard.vue\";\nimport TaskForm from \"@/components/TaskForm.vue\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n// eslint-disable-next-line no-undef\nconst props = defineProps([\"items\", \"title\"]);\n\nconst task = ref({});\nconst taskDialog = ref(false);\nconst edit = (id) => {\n  task.value = props.items.find((el) => el.id === id);\n  taskDialog.value = true;\n};\nconst save = (event) => {\n  store.dispatch(\"updateTask\", { ...event });\n  taskDialog.value = false;\n};\n</script>\n\n<template>\n  <div>\n    <el-dialog v-model=\"taskDialog\">\n      <TaskForm v-model:task=\"task\" @save=\"save\" :edit=\"true\" />\n    </el-dialog>\n    <h4>{{ props.title }}</h4>\n    <div class=\"task\">\n      <div v-for=\"task in props.items\" :key=\"task.id\" class=\"task-items\">\n        <TaskCard :task=\"task\" @edit=\"edit(task.id)\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.task-items {\n  margin-bottom: 10px;\n}\n</style>\n","import script from \"./ListComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ListComponent.vue?vue&type=style&index=0&id=b5ce0038&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b5ce0038\"]])\n\nexport default __exports__","<script setup>\nimport TaskForm from \"@/components/TaskForm.vue\";\nimport { useStore } from \"vuex\";\nimport { computed, ref } from \"vue\";\nimport ListComponent from \"@/components/ListComponent.vue\";\n\nconst store = useStore();\nconst todoTasks = computed(() =>\n  store.getters.tasks.filter((el) => el.status === \"new\")\n);\nconst doneTasks = computed(() =>\n  store.getters.tasks.filter((el) => el.status === \"done\")\n);\n\nconst emptyTask = {\n  name: \"\",\n  descriptions: \"\",\n  status: \"new\",\n  priority: \"low\",\n};\nconst task = ref({ ...emptyTask });\n\nconst create = (event) => {\n  store.dispatch(\"addTask\", { ...event });\n  taskDialog.value = false;\n};\n\nconst taskDialog = ref(false);\nconst addTask = () => {\n  task.value = { ...emptyTask };\n  taskDialog.value = true;\n};\n</script>\n<template>\n  <el-container>\n    <el-dialog v-model=\"taskDialog\">\n      <TaskForm v-model:task=\"task\" @create=\"create\" />\n    </el-dialog>\n    <div style=\"width: 100%\">\n      <div style=\"width: 100%; display: flex; justify-content: center\">\n        <el-button type=\"primary\" @click=\"addTask\">Добавить задачу</el-button>\n      </div>\n      <div v-if=\"store.getters.tasks.length\" class=\"task\">\n        <el-row>\n          <el-col :md=\"24\" :lg=\"12\" class=\"task-col border\">\n            <ListComponent title=\"Сделать\" :items=\"todoTasks\" />\n          </el-col>\n          <el-col :md=\"24\" :lg=\"12\" class=\"task-col\">\n            <ListComponent title=\"Сделано\" :items=\"doneTasks\" />\n          </el-col>\n        </el-row>\n      </div>\n      <div class=\"no-task\" v-else>\n        У вас нет задач.\n        <el-button type=\"text\" @click=\"addTask\"> Добавить задачу</el-button>\n      </div>\n    </div>\n  </el-container>\n</template>\n\n<style scoped>\n.task {\n  width: 100%;\n  margin-top: 25px;\n}\n.border {\n  border-right: 3px solid gray;\n}\n.task-col {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.no-task {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media screen and (max-width: 600px) {\n  .border {\n    border: none;\n  }\n}\n</style>\n","import script from \"./TaskView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TaskView.vue?vue&type=style&index=0&id=65207868&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-65207868\"]])\n\nexport default __exports__"],"names":["props","__props","emit","__emit","task","computed","get","set","newValue","formRef","ref","createTask","formEl","validate","valid","console","log","edit","value","__exports__","store","useStore","editTask","id","deleteTask","dispatch","priorities","low","medium","hing","taskDialog","items","find","el","save","event","todoTasks","getters","tasks","filter","status","doneTasks","emptyTask","name","descriptions","priority","create","addTask"],"sourceRoot":""}